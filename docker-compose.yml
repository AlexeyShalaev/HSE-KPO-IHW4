version: "3.8"

services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: on-failure:5
    environment:
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://hw4-postgres:5432/auth-service
      JWT_SECRET: secret
      JWT_EXPIRATION: 86400000
    ports:
      - "8000:8080"
    networks:
      - hw4-network
    healthcheck:
      test: curl --fail -s http://localhost:8080/actuator/health
      interval: 30s
      timeout: 10s
      start_period: 20s
      retries: 6 
    depends_on:
      postgres:
        condition: service_healthy

  ticket-service:
    build:
      context: ./ticket-service
      dockerfile: Dockerfile
    container_name: ticket-service
    restart: on-failure:5
    environment:
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://hw4-postgres:5432/ticket-service
      JWT_SECRET: secret
    ports:
      - "8080:8080"
    networks:
      - hw4-network
    healthcheck:
      test: curl --fail -s http://localhost:8080/actuator/health
      interval: 30s
      timeout: 10s
      start_period: 20s
      retries: 6 
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:14
    container_name: hw4-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "books_db" ]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: on-failure:5
    networks:
      - hw4-network
    volumes:
      - hw4-postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "15432:5432"

networks:
  hw4-network:


volumes:
  hw4-postgres-data:

